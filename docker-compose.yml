version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: backend_template_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: backend_template
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - backend_template_network

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: backend_template_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: backend_template
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend_template_network

  # Redis (optional for future use)
  redis:
    image: redis:7.2-alpine
    container_name: backend_template_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_template_network

  # Adminer (Database UI)
  adminer:
    image: adminer:4.8.1
    container_name: backend_template_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - backend_template_network

  # Mongo Express (MongoDB UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: backend_template_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - backend_template_network

volumes:
  mongodb_data:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  backend_template_network:
    driver: bridge
